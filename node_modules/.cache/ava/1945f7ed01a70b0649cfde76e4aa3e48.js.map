{"version":3,"sources":["index.js"],"names":["fs","require","config","test","nock","socketIO","db","initApp","html","readFileSync","server","createServer","listen","scope","mmqHomeUrl","get","reply","t","plan","io","on","socket","console","log","data","pass","local","emit","field_one","field_two","cover_path","created_at","Date","updated_at","link","connect"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA,MAAMC,SAASD,QAAQ,QAAR,CAAf;AAAA,MACM,EAACE,IAAD,KAASF,QAAQ,KAAR,CADf;AAAA,MAEMG,OAAOH,QAAQ,MAAR,CAFb;AAAA,MAGMI,WAAWJ,QAAQ,WAAR,CAHjB;;AAKA,MAAMK,KAAKL,QAAQ,UAAR,CAAX;AACA,MAAMM,UAAUN,QAAQ,WAAR,CAAhB;;AAEA,MAAMO,OAAOR,GAAGS,YAAH,CAAgB,uBAAhB,EAAyC,OAAzC,CAAb;;AAEA,MAAMC,SAAST,QAAQ,MAAR,EAAgBU,YAAhB,EAAf;;AAEAD,OAAOE,MAAP,CAAc,IAAd;;AAEA,MAAMC,QAAQT,KAAKF,OAAOY,UAAZ,EACXC,GADW,CACP,GADO,EAEXC,KAFW,CAEL,GAFK,EAEAR,IAFA,CAAd;;AAIAL,KAAK,iCAAL,EAAwC,MAAOc,CAAP,IAAa;AACnDA,IAAEC,IAAF,CAAO,CAAP;AACA,QAAMC,KAAKd,SAASK,MAAT,CAAX;AACAS,KAAGC,EAAH,CAAM,YAAN,EAAqBC,MAAD,IAAY;AAC9BC,YAAQC,GAAR,CAAY,gBAAZ;AACA;AACAF,WAAOD,EAAP,CAAU,kBAAV,EAA+BI,IAAD,IAAU;AACtCP,QAAEQ,IAAF;AACAH,cAAQC,GAAR,CAAYC,IAAZ;AACD,KAHD;AAIAH,WAAOK,KAAP,CAAaC,IAAb,CAAkB,sBAAlB,EAA0C;AACxCC,iBAAW,YAD6B;AAExCC,iBAAW,gBAF6B;AAGxCC,kBAAY,aAH4B;AAIxCC,kBAAY,IAAIC,IAAJ,EAJ4B;AAKxCC,kBAAY,IAAID,IAAJ,EAL4B;AAMxCE,YAAM;AANkC,KAA1C;AAQD,GAfD;;AAiBA,QAAM5B,GAAG6B,OAAH,EAAN;;AAEA,QAAM5B,SAAN;;AAEA;AACAU,IAAEQ,IAAF;AACD,CA1BD","file":"index.js","sourcesContent":["const fs = require('fs');\n\nconst config = require('config'),\n      {test} = require('ava'),\n      nock = require('nock'),\n      socketIO = require('socket.io');\n\nconst db = require('../db.js');\nconst initApp = require('../app.js');\n\nconst html = fs.readFileSync('./test/data/home.html', 'utf-8');\n\nconst server = require('http').createServer();\n\nserver.listen(3000);\n\nconst scope = nock(config.mmqHomeUrl)\n  .get('/')\n  .reply(200, html);\n\ntest('should save new track and round', async (t) => {\n  t.plan(2);\n  const io = socketIO(server);\n  io.on('connection', (socket) => {\n    console.log('connectssssion');\n    // socket.emit('disconnect', {t: 1});\n    socket.on('game-client-join', (data) => {\n      t.pass();\n      console.log(data);\n    });\n    socket.local.emit('game-server-song-end', {\n      field_one: 'Walk On By',\n      field_two: 'Dionne Warwick',\n      cover_path: 'cover/11223',\n      created_at: new Date(),\n      updated_at: new Date(),\n      link: '/tmp/11223.mp3'\n    });\n  });\n\n  await db.connect();\n\n  await initApp();\n\n  // t.true(scope.isDone());\n  t.pass();\n});\n"]}